# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cometbft/services/block_results/v1/block_results_service.proto
# Protobuf Python Version: 5.29.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    2,
    '',
    'cometbft/services/block_results/v1/block_results_service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from cometbft.services.block_results.v1 import block_results_pb2 as cometbft_dot_services_dot_block__results_dot_v1_dot_block__results__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n>cometbft/services/block_results/v1/block_results_service.proto\x12\"cometbft.services.block_results.v1\x1a\x36\x63ometbft/services/block_results/v1/block_results.proto2\xa2\x01\n\x13\x42lockResultsService\x12\x8a\x01\n\x0fGetBlockResults\x12:.cometbft.services.block_results.v1.GetBlockResultsRequest\x1a;.cometbft.services.block_results.v1.GetBlockResultsResponseBEZCgithub.com/cometbft/cometbft/api/cometbft/services/block_results/v1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cometbft.services.block_results.v1.block_results_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZCgithub.com/cometbft/cometbft/api/cometbft/services/block_results/v1'
  _globals['_BLOCKRESULTSSERVICE']._serialized_start=159
  _globals['_BLOCKRESULTSSERVICE']._serialized_end=321
# @@protoc_insertion_point(module_scope)
