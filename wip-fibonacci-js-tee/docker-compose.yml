version: '3'

services:
  # This is only for development/simulation
  # In a real deployment, this would be an EC2 instance
  parent:
    build:
      context: .
      dockerfile: docker/Dockerfile.parent
    image: nitro-parent-sim
    container_name: nitro-parent-sim
    ports:
      - "${PARENT_PORT:-8000}:${PARENT_PORT:-8000}"
    volumes:
      - ./src:/app/src
    environment:
      - ENV_SETUP=SIM
      - ENCLAVE_HOST=${ENCLAVE_HOST:-enclave}
      - ENCLAVE_PORT=${ENCLAVE_PORT:-8000}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN:-}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - KMS_KEY_ID=${KMS_KEY_ID:-}
      - DEBUG=${DEBUG:-false}
    networks:
      - nitro-net
    depends_on:
      - enclave
    # Apply security settings to parent as well
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges

  # This is only a simulation of the enclave
  # In a real deployment, this would be a Nitro Enclave
  enclave:
    build:
      context: .
      dockerfile: docker/Dockerfile.enclave_sim
    image: nitro-enclave-sim
    container_name: nitro-enclave-sim
    environment:
      - ENV_SETUP=SIM
      - ENCLAVE_PORT=${ENCLAVE_PORT:-8000}
      - DEBUG=${DEBUG:-false}
      - APP_TYPE=SIMPLE
    networks:
      nitro-net:
        aliases:
          - ${ENCLAVE_HOST:-enclave}
    # Simulate isolation by limiting resources
    deploy:
      resources:
        limits:
          cpus: '${ENCLAVE_CPU_LIMIT:-1}'
          memory: ${ENCLAVE_MEMORY_LIMIT:-512M}
    # No ports exposed to the host to simulate isolation
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges

networks:
  nitro-net:
    driver: bridge
    name: nitro-net 